# .github/workflows/main.yml
name: Build and Commit Resume PDF with Bun (Docker)

on:
  push:
    branches:
      - main

jobs:
  build-pdf:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/puppeteer/puppeteer:latest
      options: --user root
    permissions:
      contents: write
    outputs:
      committed: ${{ steps.commit.outputs.committed }}
      version: ${{ steps.extract-version.outputs.version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.RESUME_ACTION_PAT }}

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install project dependencies with Bun
        run: bun install

      - name: Build React app with Bun
        run: bun run build
        env:
          CI: true

      - name: Generate PDF with Bun
        run: bun run scripts/generate-pdf.ts

      - name: Extract version
        id: extract-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Commit and push PDF
        id: commit
        env:
          GH_REPO_TOKEN: ${{ secrets.RESUME_ACTION_PAT }}
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'actions@github.com'
          git config --global --add safe.directory "/github/workspace"

          git add pdf/

          if git diff --staged --quiet; then
            echo "No changes to PDF, skipping commit."
            echo "committed=false" >> $GITHUB_OUTPUT
          else
            git commit -m "Automated: Update resume PDF"
            git push https://x-access-token:${GH_REPO_TOKEN}@github.com/${{ github.repository }}.git HEAD:main
            echo "committed=true" >> $GITHUB_OUTPUT
          fi

  create-release:
    needs: build-pdf
    if: needs.build-pdf.outputs.committed == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.RESUME_ACTION_PAT }}

      - name: Create tag and release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION="${{ needs.build-pdf.outputs.version }}"
          TAG_NAME="v$VERSION"

          echo "Creating tag $TAG_NAME"
          git tag -a "$TAG_NAME" -m "Release $TAG_NAME"
          git push origin "$TAG_NAME" 

          echo "Creating GitHub release $TAG_NAME"
          ls -R pdf/ 
          gh release create "$TAG_NAME" \
            --title "Resume $TAG_NAME" \
            --notes "Automated resume release for version $VERSION" \
            pdf/*.pdf
